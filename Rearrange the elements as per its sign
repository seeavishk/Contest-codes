class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        int n=nums.size();
        vector<int> pos;
        vector<int> neg;
        for(int i=0;i<n;i++){
            if(nums[i]>0)    pos.push_back(nums[i]);
            else neg.push_back(nums[i]);
        }
        for(int i=0;i<pos.size();i++){
           nums[2*i]=pos[i];
           nums[2*i+1]=neg[i];
        }
        //to see the remaining elements 
        //case 1 : if the positive numbers are larger than the negative number
        if(pos.size()>neg.size()){
            int index=neg.size()*2;
            for(int i=index;i<pos.size();i++){
                nums[index]=pos[i];
                i++;
            }
            return nums;
        }
        //to see the remaining elements 
        //case 1 : if the positive numbers are smaller than the negative number
         if(neg.size()>pos.size()){
            int index=pos.size()*2;    //this is why kyuki to enter the negative number after the end of positive index in the array
            for(int i=index;i<neg.size();i++){
                nums[index]=neg[i];
                i++;
            }
        }
            return nums;
    }
};
