class Solution {
public:
    int longestSubarray(vector<int>& nums, int limit) {
        int n = nums.size();
        if (n == 0) return 0;
        
        int result = 0;
        multiset<int> window;
        int left = 0;
        
        for (int right = 0; right < n; ++right) {
            window.insert(nums[right]);
            while (*window.rbegin() - *window.begin() > limit) {
                window.erase(window.find(nums[left++]));
            }
            result = max(result, right - left + 1);
        }
        
        return result;
    }
};
