class Solution{
public:	
	bool sameFreq(string s)
	{
	    unordered_map<char, int> freq;
        for(char c : s){
            freq[c]++;
        }
        
        unordered_map<int, int> count;
        for(auto& p : freq){
            count[p.second]++;
        }
        
        if(count.size() == 1){
            return true;
        }
        
        if(count.size() == 2){
            auto it1 = count.begin();
            auto it2 = next(it1);
            
            if((it1->second == 1 && (it1->first == 1 || it1->first - it2->first == 1)) ||
               (it2->second == 1 && (it2->first == 1 || it2->first - it1->first == 1))){
                return true;
            }
        }
        
        return false;
	}
};
