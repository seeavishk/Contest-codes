/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode *slow=head,*fast=head,*prev,*temp;   //slow =head aur fast bhi head
        while(fast && fast->next)    //jabatak na ye dono zero naa ho jaate tb tk   
           slow=slow->next,fast=fast->next->next;  //fast se peeche chelgea
        prev=slow,slow=slow->next,prev->next=NULL;    //prev =slow,slow++,
        while(slow) //jb tk ka slow end tk nhi pahuchta tb tk ka use kro 
        temp=slow->next,slow->next=prev,prev=slow,slow=temp;
        fast=head,slow=prev;
        while(slow)
        if(fast->val !=slow->val) return false;
        else fast=fast->next,slow=slow->next;
        return true;
    }
};
