
public:
 int solve(int n,string &s,unordered_map<string,int>&mp){
     if(s.size()==0){
         return 1;
     }
     string check="";
     for(int i=0;i<s.size();i++){
         check+=s[i];    //check me we are entering the substring
         if(mp[check]>0){    //jb bhi wo bda ho means the count of the string in the check
             string str=s.substr(i+1);           
             if(solve(n,str,mp)){
                 return 1;
             }
         }
     }
     return 0;
 }
    int wordBreak(int n, string s, vector<string> &dictionary) {
        //code here
        unordered_map<string,int> mp;
        for(int i=0;i<n;i++){
            mp[dictionary[i]]++;
        }
        return solve(n,s,mp);
    }
};
