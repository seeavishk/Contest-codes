//we need to find the range sum of the bst where we have low as a node,high as a node and given roots of the tree
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rangeSumBST(self, root: Optional[TreeNode], low: int, high: int) -> int:
        def dfs(node):
            if not node:
                return 0
            curr_val=0
            if low<=node.val<=high:
                curr_val=node.val
            left_sum=dfs(node.left)
            right_sum=dfs(node.right)

            return curr_val+left_sum+right_sum

        return dfs(root)         
